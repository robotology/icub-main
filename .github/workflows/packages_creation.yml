name: Packages creation

on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    # branches:
    #   - master

jobs:
# start job "preliminary-steps"
  preliminary-steps:
    name: "Preliminary"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - run: git fetch --prune --unshallow

    - name: Get Latest Tag
      id: get_latest_tag
      uses: WyriHaximus/github-action-get-previous-tag@0.2.0

    - name: create version file
      shell: bash
      run: |
        export ICUB_PACKAGE_VERSION=$( echo ${{ steps.get_latest_tag.outputs.tag }} | sed 's/^v//' )
        echo $ICUB_PACKAGE_VERSION > ICUB_PACKAGE_VERSION.txt

    - name: upload url file
      uses: actions/upload-artifact@v2
      with:
        name: ICUB_PACKAGE_VERSION.txt
        path: ./ICUB_PACKAGE_VERSION.txt

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

    - name: create upload URL file
      shell: bash
      run: echo ${{ steps.create_release.outputs.upload_url }} > UPLOAD_URL.txt

    - name: upload url file
      uses: actions/upload-artifact@v2
      with:
        name: UPLOAD_URL.txt
        path: ./UPLOAD_URL.txt

# end job "preliminary-steps"
# start job "normal-build"
  normal-build:
    name: "[packages:@${{ matrix.os }}]"
    needs: [preliminary-steps]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
    steps:

    - name: install deps
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y git
        sudo apt-get install -y lsb-release

    - uses: actions/checkout@master

    - uses: actions/download-artifact@v2
      with:
        name: ICUB_PACKAGE_VERSION.txt

    - name: Generate icub-common metapackage
      id: package_generation
      shell: bash
      run: |
        chmod +x ./.ci/create_icub-common_deb.sh
        export ICUB_PACKAGE_VERSION=$(cat ICUB_PACKAGE_VERSION.txt)
        ./.ci/create_icub-common_deb.sh
        echo ::set-output name=ICUB_PACKAGE_NAME::$( cat ICUB_PACKAGE_NAME.txt )

    - uses: actions/download-artifact@v2
      with:
        name: UPLOAD_URL.txt

    - name: read upload url
      id: read_upload_url
      shell: bash
      run: echo ::set-output name=UPLOAD_URL::$( cat UPLOAD_URL.txt )

    - name: Upload Release Asset
      id: upload-release-asset
      uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ steps.read_upload_url.outputs.UPLOAD_URL }}
        asset_path: ${{ steps.package_generation.outputs.ICUB_PACKAGE_NAME }}
        asset_content_type: application/vnd.debian.binary-package

# end job "normal-build"
# start job "docker-build"
  docker-build:
    name: '[packages:@${{ matrix.docker_image }}]'
    needs: [normal-build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker_image:
#          - "ubuntu:bionic"
          - "debian:buster"
    container:
      image: ${{ matrix.docker_image }}
    steps:

    - name: install deps
      shell: bash
      run: |
        apt-get update
        apt-get install -y git
        apt-get install -y lsb-release

    - uses: actions/checkout@master

    - uses: actions/download-artifact@v2
      with:
        name: ICUB_PACKAGE_VERSION.txt

    - name: Generate icub-common metapackage
      id: package_generation
      shell: bash
      run: |
        chmod +x ./.ci/create_icub-common_deb.sh
        export ICUB_PACKAGE_VERSION=$(cat ICUB_PACKAGE_VERSION.txt)
        ./.ci/create_icub-common_deb.sh
        echo ::set-output name=ICUB_PACKAGE_NAME::$( cat ICUB_PACKAGE_NAME.txt )

    - uses: actions/download-artifact@v2
      with:
        name: UPLOAD_URL.txt

    - name: read upload url
      id: read_upload_url
      shell: bash
      run: echo ::set-output name=UPLOAD_URL::$( cat UPLOAD_URL.txt )

    - name: Upload Release Asset
      id: upload-release-asset
      uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ steps.read_upload_url.outputs.UPLOAD_URL }}
        asset_path: ${{ steps.package_generation.outputs.ICUB_PACKAGE_NAME }}
        asset_content_type: application/vnd.debian.binary-package

# end job "docker-build"
# start job "Cleanup-steps"
  cleanup-steps:
    name: "Cleanup"
    needs: [docker-build]
    runs-on: ubuntu-latest

    steps:

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            ICUB_PACKAGE_VERSION.txt
            UPLOAD_URL.txt

# end job "clenup-steps"
