name: Packages creation

on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches:
      - master

jobs:
# start job "preliminary-steps"
  preliminary-steps:
    name: "Preliminary"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - run: git fetch --prune --unshallow

    - name: Get Latest Tag
      id: get_latest_tag
      uses: WyriHaximus/github-action-get-previous-tag@0.2.0

    - name: create version file
      shell: bash
      run: |
        export ICUB_PACKAGE_VERSION=$( echo ${{ steps.get_latest_tag.outputs.tag }} | sed 's/^v//' )
        echo $ICUB_PACKAGE_VERSION > ICUB_PACKAGE_VERSION.txt

    - name: upload version file
      uses: actions/upload-artifact@v2
      with:
        name: ICUB_PACKAGE_VERSION.txt
        path: ./ICUB_PACKAGE_VERSION.txt

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

# end job "preliminary-steps"
# start job "normal-build"
  normal-build:
    name: "[packages:@ubuntu-20.04]"
    needs: [preliminary-steps]
    runs-on: ubuntu-20.4
    steps:

    - name: install deps
      shell: bash
      run: |
        apt update
        apt install -y git
        apt install -y lsb-release

    - uses: actions/checkout@master

    - uses: actions/download-artifact@v2
      with:
        name: ICUB_PACKAGE_VERSION.txt

    - name: Generate icub-common metapackage
      shell: bash
      run: |
        chmod +x ./.ci/create_icub-common_deb.sh
        export ICUB_PACKAGE_VERSION=$(cat ICUB_PACKAGE_VERSION.txt)
        ./.ci/create_icub-common_deb.sh
        echo ::set-env name=ICUB_PACKAGE_NAME::$( echo $ICUB_PACKAGE_NAME )

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ICUB_PACKAGE_NAME }}
        asset_name: ${{ ICUB_PACKAGE_NAME }}
        asset_content_type: application/vnd.debian.binary-package

# end job "normal-build"
# start job "docker-build"
  docker-build:
    name: '[packages:@${{ matrix.docker_image }}]'
    needs: [normal-build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker_image:
          - "ubuntu:bionic"
          - "debian:buster"
    container:
      image: ${{ matrix.docker_image }}
    steps:
    - name: install deps
      shell: bash
      run: |
        apt update
        apt install -y git
        apt install -y lsb-release

    - uses: actions/checkout@master

    - uses: actions/download-artifact@v2
      with:
        name: ICUB_PACKAGE_VERSION.txt

    - name: Generate icub-common metapackage
      shell: bash
      run: |
        chmod +x ./.ci/create_icub-common_deb.sh
        export ICUB_PACKAGE_VERSION=$(cat ICUB_PACKAGE_VERSION.txt)
        ./.ci/create_icub-common_deb.sh
        echo ::set-env name=ICUB_PACKAGE_NAME::$( echo $ICUB_PACKAGE_NAME )

     - name: Upload Release Asset
       id: upload-release-asset
       uses: actions/upload-release-asset@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: ./${{ ICUB_PACKAGE_NAME }}
         asset_name: ${{ ICUB_PACKAGE_NAME }}
         asset_content_type: application/vnd.debian.binary-package

# end job "docker-build"
