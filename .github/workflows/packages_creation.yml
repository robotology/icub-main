name: Packages creation

on:
  workflow_dispatch:

jobs:

# start job "docker-build"
  docker-build:
    name: '[packages:@${{ matrix.docker_image }}]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        docker_image:
          - "debian:buster"
          - "ubuntu:focal"
          - "ubuntu:jammy"
    container:
      image: ${{ matrix.docker_image }}
    steps:

    - name: install deps
      shell: bash
      run: |
        apt update
        apt install -y git
        apt install -y lsb-release
        apt install -y build-essential wget software-properties-common
        apt install -y libsqlite3-dev qml-module-qt-labs-folderlistmodel qml-module-qt-labs-settings libopenni2-dev libi2c-dev libv4l-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-libav gstreamer1.0-tools libgraphviz-dev libqcustomplot-dev
      env:
        TZ: Italy/Rome
        DEBIAN_FRONTEND: noninteractive
    - uses: actions/checkout@main
    
    - name: Get Latest Release Info
      id: latest_release_info
      uses: jossef/action-latest-release-info@v1.2.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate icub-common metapackage
      id: package_generation_icub-common
      shell: bash
      run: |
        export ICUB_PACKAGE_VERSION=$( echo ${{ steps.latest_release_info.outputs.tag_name }} | sed 's/^v//' )
        ./.ci/create_icub-common_deb.sh
        echo "ICUB_COMMON_PACKAGE_NAME=$( cat ICUB_COMMON_PACKAGE_NAME.txt )" >> $GITHUB_OUTPUT
    - name: Generate icub package
      id: package_generation_icub-main
      shell: bash
      run: |
        export ICUB_PACKAGE_VERSION=$( echo ${{ steps.latest_release_info.outputs.tag_name }} | sed 's/^v//' )
        ./.ci/create_icub-main_deb.sh
        echo "ICUB_MAIN_PACKAGE_NAME=$( cat ICUB_MAIN_PACKAGE_NAME.txt )" >> $GITHUB_OUTPUT

    - name: Upload Release asset icub-common
      uses: actions/upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
        asset_path: ./${{ steps.package_generation_icub-common.outputs.ICUB_COMMON_PACKAGE_NAME }}
        asset_name: ${{ steps.package_generation_icub-common.outputs.ICUB_COMMON_PACKAGE_NAME }}
        asset_content_type: application/vnd.debian.binary-package
    - name: Upload Release asset icub-main
      uses: actions/upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
        asset_path: ./${{ steps.package_generation_icub-main.outputs.ICUB_MAIN_PACKAGE_NAME }}
        asset_name: ${{ steps.package_generation_icub-main.outputs.ICUB_MAIN_PACKAGE_NAME }}
        asset_content_type: application/vnd.debian.binary-package

# end job "docker-build"
# start job "Cleanup-steps"
  cleanup-steps:
    name: "Cleanup"
    needs: [docker-build]
    runs-on: ubuntu-latest

    steps:

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            ICUB_PACKAGE_VERSION.txt

# end job "clenup-steps"
