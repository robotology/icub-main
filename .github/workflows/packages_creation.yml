name: Packages creation

on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches:
      - master

jobs:

  preliminary-steps:
    name: "Preliminary"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - run: git fetch --prune --unshallow

    - name: Get Latest Tag
      id: get_latest_tag
      uses: WyriHaximus/github-action-get-previous-tag@0.2.0

    - name: Set tag var
      shell: bash
      run: |
        export ICUB_PACKAGE_VERSION=$( ${{ steps.get_latest_tag.outputs.tag }} | sed 's/^v//' )
        echo $ICUB_PACKAGE_VERSION
        echo "::set-env name=ICUB_PACKAGE_VERSION::${ICUB_PACKAGE_VERSION}"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

  docker-build:
    name: '[packages:@${{ matrix.docker_image }}]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker_image:
          - "ubuntu:focal"
          - "ubuntu:bionic"
          - "debian:buster"
    container:
      image: ${{ matrix.docker_image }}
    steps:
    - name: install deps
      shell: bash
      run: |
        apt update
        apt install -y git
        apt install -y lsb-release

    - uses: actions/checkout@master

    - run: git fetch --prune --unshallow

    - name: Get Latest Tag
      id: get_latest_tag
      uses: WyriHaximus/github-action-get-previous-tag@0.2.0

    - name: Generate icub-common metapackage
      shell: bash
      run: |
        chmod +x ./.ci/create_icub-common_deb.sh
        #export ICUB_PACKAGE_VERSION=$(echo ${{ steps.get_latest_tag.outputs.tag }} | sed 's/^v//' )
        ./.ci/create_icub-common_deb.sh
        echo $ICUB_PACKAGE_NAME
        echo "::set-env name=DEBNAME::$ICUB_PACKAGE_NAME"

    - uses: actions/upload-artifact@v2
      with:
        path: ${{ env.DEBNAME }}
