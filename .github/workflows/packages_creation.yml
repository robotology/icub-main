name: Packages creation

on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches:
      - master

jobs:

  docker-build:
    name: '[packages:@${{ matrix.docker_image }}]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker_image:
          - "ubuntu:focal"
          - "ubuntu:bionic"
          - "debian:buster"
    container:
      image: ${{ matrix.docker_image }}
    steps:
    - name: install deps
      shell: bash
      run: |
        apt update
        apt install -y git
        apt install -y lsb-release

    - uses: actions/checkout@master

    - run: git fetch --prune --unshallow

    # - name : test
    #   shell: bash
    #   run: |
    #     ls -la
    #     git describe --tags  --abbrev=0 | sed 's/^v//'

    - name: Get Latest Tag
      id: get_latest_tag
      uses: WyriHaximus/github-action-get-previous-tag@0.2.0

    - name: Generate icub-common metapackage [${{ matrix.docker_image }}]
      shell: bash
      run: |
        chmod +x ./.ci/create_icub-common_deb.sh
        export _PACKAGE_VER=$(echo ${{ steps.get_latest_tag.outputs.tag }} | sed 's/^v//' )
        ./.ci/create_icub-common_deb.sh -V $_PACKAGE_VER

    - name: Create Release
      if: github.event_name == 'tag'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./iCub-common${{ env._PACKAGE_VER }}-${{env.ICUB_DEBIAN_REVISION_NUMBER}.${{env.PLATFORM_RELEASE}}${{env.PLATFORM_HARDWARE}}.deb
          asset_name: iCub-common${{ env._PACKAGE_VER }}-${{env.ICUB_DEBIAN_REVISION_NUMBER}.${{env.PLATFORM_RELEASE}}${{env.PLATFORM_HARDWARE}}.deb
          asset_content_type: application/octet-stream
