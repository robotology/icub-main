/*
 * SPDX-FileCopyrightText: 2006-2021 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Autogenerated by Thrift Compiler (0.14.1-yarped)
//
// This is an automatically generated file.
// It could get re-generated if the ALLOW_IDL_GENERATION flag is on.

#ifndef YARP_THRIFT_GENERATOR_STRUCT_RAWVALUESDATAVECTORSMAP_H
#define YARP_THRIFT_GENERATOR_STRUCT_RAWVALUESDATAVECTORSMAP_H

#include <yarp/os/Wire.h>
#include <yarp/os/idl/WireTypes.h>

namespace iCub {

/**
 * rawValuesDataVectorsMap
 * IDL struct of a map of vectors to store the raw value data sent by the device
 */
class rawValuesDataVectorsMap :
        public yarp::os::idl::WirePortable
{
public:
    // Fields
    /**
     * contain a map of vectors of the raw data as <string, vector>
     * the user wanna send from low to higher level
     */
    std::map<std::string, std::vector<std::int32_t>> vectorsMap{};

    // Default constructor
    rawValuesDataVectorsMap() = default;

    // Constructor with field values
    rawValuesDataVectorsMap(const std::map<std::string, std::vector<std::int32_t>>& vectorsMap);

    // Read structure on a Wire
    bool read(yarp::os::idl::WireReader& reader) override;

    // Read structure on a Connection
    bool read(yarp::os::ConnectionReader& connection) override;

    // Write structure on a Wire
    bool write(const yarp::os::idl::WireWriter& writer) const override;

    // Write structure on a Connection
    bool write(yarp::os::ConnectionWriter& connection) const override;

    // Convert to a printable string
    std::string toString() const;

    // If you want to serialize this class without nesting, use this helper
    typedef yarp::os::idl::Unwrapped<rawValuesDataVectorsMap> unwrapped;

private:
    // read/write vectorsMap field
    bool read_vectorsMap(yarp::os::idl::WireReader& reader);
    bool write_vectorsMap(const yarp::os::idl::WireWriter& writer) const;
    bool nested_read_vectorsMap(yarp::os::idl::WireReader& reader);
    bool nested_write_vectorsMap(const yarp::os::idl::WireWriter& writer) const;
};

} // namespace iCub

#endif // YARP_THRIFT_GENERATOR_STRUCT_RAWVALUESDATAVECTORSMAP_H
