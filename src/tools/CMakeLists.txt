# Copyright: (C) 2010 RobotCub Consortium
# Authors: Lorenzo Natale
# CopyPolicy: Released under the terms of the GNU GPL v2.0.

add_subdirectory(controlBoardDumper)
add_subdirectory(dataDumper)
add_subdirectory(simpleClient)
add_subdirectory(testStereoMatch)
add_subdirectory(iCubTest)
add_subdirectory(fingersTuner)
add_subdirectory(embObjProtoTools/boardTransceiver)

#canLoader needs GtkPlus, but it contains a library needed by other modules
add_subdirectory(canLoader)
add_subdirectory(ethLoader)

if(ICUB_USE_GTK2)
   add_subdirectory(robotMotorGui)
   add_subdirectory(iCubSkinGui)
   if(ICUB_GTK2_LEGACY)
      message(STATUS "GTK2 legacy detected, skipping skinManagerGui")
   else(ICUB_GTK2_LEGACY)
      add_subdirectory(skinManagerGui)
   endif(ICUB_GTK2_LEGACY)
else(ICUB_USE_GTK2)
   message(STATUS "GTK2 not found/selected, skipping iCubSkinGui")
      message(STATUS "GTK2 not found/selected, skipping robotMotorGui")
   message(STATUS "GTK2 not found/selected, skipping skinManagerGui")
endif(ICUB_USE_GTK2)

if(ICUB_USE_SDL)
   add_subdirectory(joystickCtrl)
   add_subdirectory(joystickCheck)
else(ICUB_USE_SDL)
   message(STATUS "SDL not found/selected, skipping joystickCtrl")
endif(ICUB_USE_SDL)

if(ICUB_USE_GTK2)
   add_subdirectory(frameGrabberGui2)
   add_subdirectory(focusTool)
   if(ICUB_USE_INTERFACEGUI)
     add_subdirectory(iCubInterfaceGui)
   endif(ICUB_USE_INTERFACEGUI)
else(ICUB_USE_GTK2)
   message(STATUS "GTK2 not found/selected, skipping frameGrabberGui2")
   message(STATUS "GTK2 not found/selected, skipping focusTool")
   message(STATUS "GTK2 not found/selected, skipping iCubInterfaceGui")
endif(ICUB_USE_GTK2)

if(ICUB_USE_QT4_QT3_SUPPORT)
    if(ICUB_USE_QT4 AND ICUB_USE_OpenGL AND ICUB_USE_GLUT)
        add_subdirectory(iCubGui)
    else(ICUB_USE_QT4 AND ICUB_USE_OpenGL AND ICUB_USE_GLUT)
        message(STATUS "Qt4-Qt3 support or OpenGL or GLUT not found/selected, skipping iCubGui")
    endif(ICUB_USE_QT4 AND ICUB_USE_OpenGL AND ICUB_USE_GLUT)
else(ICUB_USE_QT4_QT3_SUPPORT)
    if(ICUB_USE_Qt3 AND ICUB_USE_OpenGL AND ICUB_USE_GLUT)
        add_subdirectory(iCubGui)
    else(ICUB_USE_Qt3 AND ICUB_USE_OpenGL AND ICUB_USE_GLUT)
        message(STATUS "Qt3 or OpenGL or GLUT not found/selected, skipping iCubGui")
    endif(ICUB_USE_Qt3 AND ICUB_USE_OpenGL AND ICUB_USE_GLUT)
endif(ICUB_USE_QT4_QT3_SUPPORT)

if(ICUB_USE_OpenCV)
    if(ICUB_OpenCV_LEGACY)
        message(STATUS "OpenCV legacy detected, skipping stereoCalib")
        # put hereafter modules that rely on old versions of OpenCV declared as legacy
    else(ICUB_OpenCV_LEGACY)
        add_subdirectory(stereoCalib)
    endif(ICUB_OpenCV_LEGACY)
else(ICUB_USE_OpenCV)
    message(STATUS "OpenCV not found/selected, skipping stereoCalib")
endif(ICUB_USE_OpenCV)

if(ICUB_USE_GTK2 AND ICUB_USE_OpenCV)
    if(ICUB_OpenCV_LEGACY)
        message(STATUS "OpenCV legacy detected, skipping dataSetPlayer")
    else(ICUB_OpenCV_LEGACY)
        add_subdirectory(dataSetPlayer)
    endif(ICUB_OpenCV_LEGACY)
else(ICUB_USE_GTK2 AND ICUB_USE_OpenCV)
    message(STATUS "OpenCV or GTK2 not found/selected, skipping dataSetPlayer")
endif(ICUB_USE_GTK2 AND ICUB_USE_OpenCV)

if((ICUB_USE_GSL AND ICUB_USE_IPOPT) AND (ICUB_USE_OpenCV AND (NOT ICUB_OpenCV_LEGACY)))
    add_subdirectory(depth2kin)
else()
    message(STATUS "Unmatched dependencies, skipping depth2kin")
endif()

